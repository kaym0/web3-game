import { ethers } from "hardhat";

async function main() {
    const equipment = await deploy("DreamEquipment");
    const characters = await deploy("Characters");
    const coin = await deploy("Coin");
    const area = await deploy("Area", [characters.address, coin.address]);

    await initialize(characters, equipment);

    await addOperator(equipment, characters.address);
    await addOperator(characters, equipment.address);
    await addOperator(coin, area.address);
    await addOperator(characters, area.address);

    console.log("Equipment deployed to:             ", equipment.address);
    console.log("Characters deployed to:            ", characters.address);
    console.log("Coin deployed to:                  ", coin.address);
    console.log("Area deployed to:                  ", area.address);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    async function deploy(name: string, args: any[] = []) {
        const Factory = await ethers.getContractFactory(name);

        const contract = await Factory.deploy(...args);

        await contract.deployed();

        return contract;
    }

    async function initialize(characters: any, equipment: any) {
        const tx = await characters.initialize(equipment.address);
        await tx.wait();
    }

    async function addOperator(contract: any, operator: any) {
        const tx = await contract.addOperator(operator);
        await tx.wait();
    }
}

// We recommend this pattern to be able to use async/await everywhere
// and properly handle errors.
main().catch((error) => {
    console.error(error);
    process.exitCode = 1;
});
